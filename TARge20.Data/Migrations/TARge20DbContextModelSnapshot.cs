// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TARge20.Data;

namespace TARge20.Data.Migrations
{
    [DbContext(typeof(TARge20DbContext))]
    partial class TARge20DbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TARge20.Core.Domain.AmetiNimetus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EsemeNimetus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kvalifikatsioonid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TooUlesanded")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("tootajaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("tootajaId");

                    b.ToTable("AmetiNimetus");
                });

            modelBuilder.Entity("TARge20.Core.Domain.FirmaHarukontor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Aadress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("FirmaPeakontorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("KontaktEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KontaktTel")
                        .HasColumnType("int");

                    b.Property<string>("Kontaktisik")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Luhinimi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nimi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RegistriNr")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FirmaPeakontorId");

                    b.ToTable("FirmaHarukontor");
                });

            modelBuilder.Entity("TARge20.Core.Domain.FirmaPeakontor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Aadress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KontaktEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KontaktTel")
                        .HasColumnType("int");

                    b.Property<string>("Kontaktisik")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Luhinimi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nimi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RegistriNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("FirmaPeakontor");
                });

            modelBuilder.Entity("TARge20.Core.Domain.HaigusLehed", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AlgusKP")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LoppKP")
                        .HasColumnType("datetime2");

                    b.Property<string>("Pohjus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("tootajaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("tootajaId");

                    b.ToTable("HaigusLehed");
                });

            modelBuilder.Entity("TARge20.Core.Domain.Laenatud", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EsemeKood")
                        .HasColumnType("int");

                    b.Property<string>("EsemeNimetus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LaenutusKP")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TagastusKP")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("tootajaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("tootajaId");

                    b.ToTable("Laenatud");
                });

            modelBuilder.Entity("TARge20.Core.Domain.Lapsed", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Eesnimi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Perenimi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("tootajaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("tootajaId");

                    b.ToTable("Lapsed");
                });

            modelBuilder.Entity("TARge20.Core.Domain.Ligipaasuload", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FirmaHarukontorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FirmaPeakontorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Kasutajatunnus")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Parool")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<DateTime>("ViimaneKulastus")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("tootajaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("FirmaHarukontorId");

                    b.HasIndex("FirmaPeakontorId");

                    b.HasIndex("tootajaId");

                    b.ToTable("Ligipaasuload");
                });

            modelBuilder.Entity("TARge20.Core.Domain.Palve", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ettepanek")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("FirmaPeakontorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Kuupaev")
                        .HasColumnType("datetime2");

                    b.Property<string>("PalveSisu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pohjus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("tootajaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("FirmaPeakontorId");

                    b.HasIndex("tootajaId");

                    b.ToTable("Palve");
                });

            modelBuilder.Entity("TARge20.Core.Domain.PuhkusteNimekiri", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AlguseKP")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LoppKP")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("tootajaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("tootajaId");

                    b.ToTable("PuhkusteNimekiri");
                });

            modelBuilder.Entity("TARge20.Core.Domain.TerviseKontroll", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Asutus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("KontrollKP")
                        .HasColumnType("datetime2");

                    b.Property<string>("Tulemus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("tootajaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("tootajaId");

                    b.ToTable("TerviseKontroll");
                });

            modelBuilder.Entity("TARge20.Core.Domain.Tootaja", b =>
                {
                    b.Property<Guid>("tootajaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Eesnimi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Isikukood")
                        .HasColumnType("int");

                    b.Property<string>("Perenimi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToolAlates")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToolKuni")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("kontaktEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("kontaktaadress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("tootajaId");

                    b.ToTable("Tootaja");
                });

            modelBuilder.Entity("TARge20.Core.Domain.Vihje", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FirmaPeakontorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Kuupaev")
                        .HasColumnType("datetime2");

                    b.Property<string>("Pohjus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VihjeSisu")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FirmaPeakontorId");

                    b.ToTable("Vihje");
                });

            modelBuilder.Entity("TARge20.Core.Domain.AmetiNimetus", b =>
                {
                    b.HasOne("TARge20.Core.Domain.Tootaja", "Tootaja")
                        .WithMany()
                        .HasForeignKey("tootajaId");

                    b.Navigation("Tootaja");
                });

            modelBuilder.Entity("TARge20.Core.Domain.FirmaHarukontor", b =>
                {
                    b.HasOne("TARge20.Core.Domain.FirmaPeakontor", "FirmaPeakontor")
                        .WithMany()
                        .HasForeignKey("FirmaPeakontorId");

                    b.Navigation("FirmaPeakontor");
                });

            modelBuilder.Entity("TARge20.Core.Domain.HaigusLehed", b =>
                {
                    b.HasOne("TARge20.Core.Domain.Tootaja", "Tootaja")
                        .WithMany()
                        .HasForeignKey("tootajaId");

                    b.Navigation("Tootaja");
                });

            modelBuilder.Entity("TARge20.Core.Domain.Laenatud", b =>
                {
                    b.HasOne("TARge20.Core.Domain.Tootaja", "Tootaja")
                        .WithMany()
                        .HasForeignKey("tootajaId");

                    b.Navigation("Tootaja");
                });

            modelBuilder.Entity("TARge20.Core.Domain.Lapsed", b =>
                {
                    b.HasOne("TARge20.Core.Domain.Tootaja", "Tootaja")
                        .WithMany()
                        .HasForeignKey("tootajaId");

                    b.Navigation("Tootaja");
                });

            modelBuilder.Entity("TARge20.Core.Domain.Ligipaasuload", b =>
                {
                    b.HasOne("TARge20.Core.Domain.FirmaHarukontor", "FirmaHarukontor")
                        .WithMany()
                        .HasForeignKey("FirmaHarukontorId");

                    b.HasOne("TARge20.Core.Domain.FirmaPeakontor", "FirmaPeakontor")
                        .WithMany()
                        .HasForeignKey("FirmaPeakontorId");

                    b.HasOne("TARge20.Core.Domain.Tootaja", "Tootaja")
                        .WithMany()
                        .HasForeignKey("tootajaId");

                    b.Navigation("FirmaHarukontor");

                    b.Navigation("FirmaPeakontor");

                    b.Navigation("Tootaja");
                });

            modelBuilder.Entity("TARge20.Core.Domain.Palve", b =>
                {
                    b.HasOne("TARge20.Core.Domain.FirmaPeakontor", "FirmaPeakontor")
                        .WithMany()
                        .HasForeignKey("FirmaPeakontorId");

                    b.HasOne("TARge20.Core.Domain.Tootaja", "Tootaja")
                        .WithMany()
                        .HasForeignKey("tootajaId");

                    b.Navigation("FirmaPeakontor");

                    b.Navigation("Tootaja");
                });

            modelBuilder.Entity("TARge20.Core.Domain.PuhkusteNimekiri", b =>
                {
                    b.HasOne("TARge20.Core.Domain.Tootaja", "Tootaja")
                        .WithMany()
                        .HasForeignKey("tootajaId");

                    b.Navigation("Tootaja");
                });

            modelBuilder.Entity("TARge20.Core.Domain.TerviseKontroll", b =>
                {
                    b.HasOne("TARge20.Core.Domain.Tootaja", "Tootaja")
                        .WithMany()
                        .HasForeignKey("tootajaId");

                    b.Navigation("Tootaja");
                });

            modelBuilder.Entity("TARge20.Core.Domain.Vihje", b =>
                {
                    b.HasOne("TARge20.Core.Domain.FirmaPeakontor", "FirmaPeakontor")
                        .WithMany()
                        .HasForeignKey("FirmaPeakontorId");

                    b.Navigation("FirmaPeakontor");
                });
#pragma warning restore 612, 618
        }
    }
}
